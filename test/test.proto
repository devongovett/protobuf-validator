message Basic {
  required string foo = 0;
  optional int32 bar = 1;
  optional Any baz = 2;
}

message Parent {
  required uint32 id = 0;
  optional Child child = 1;
  optional Bad bad = 2;
  
  message Child {
    required string foo = 0;
  }
}

message Enum {
  required Type type = 0;
  
  enum Type {
    ONE = 0;
    TWO = 1;
    THREE = 2;
  }
}

message Array {
  repeated string values = 0;
}

message Map {
  map<string, string> foo = 0;
  map<Key, Value> bar = 1;
  
  message Key {
    string key = 0;
  }
  
  message Value {
    uint32 val = 0;
  }
}

message OneOf {
  oneof test {
    string foo = 0;
    int32 bar = 1;
  }
}

message Options {
  optional string test1 = 0 [length = 5];
  optional string test2 = 1 [minLength = 2, maxLength = 5];
  optional int32 test3 = 2 [min = 2, max = 5];
  repeated string test4 = 3 [length = 2, itemLength = 2];
  repeated int32 test5 = 4 [minLength = 2, maxLength = 5, itemMin = 2, itemMax = 5];
}
